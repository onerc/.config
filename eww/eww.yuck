(include "/home/riddle/.config/eww/variables.yuck")

(defwindow powermenu
        :exclusive true
        :monitor 0
        :geometry (geometry
	    :width "100%"
	    :height "10"
        :anchor "top center")
(centerbox
	(box :space-evenly false
		(workspaces)
        (cpustatus)
        (ramstatus)
        (diskstatus)
    )
	(caltime)
	(box :space-evenly false :halign "end"
		(label :text nowplaying)
		(sourcev2)
		(sinkv2)
        (switch)
		(mediabar)		
		(label :text internetlogo)
    )
)
)


(defwindow cal
        :monitor 0
		:geometry (geometry :x "50%" :anchor "top center")
(calendar)
)


(defwidget mediabar []
	(box
	(button :onclick "playerctl previous"
	(label  :text ""))
	(button :onclick "playerctl play-pause"
	(label  :text playpause))
	(button :onclick "playerctl next"
	(label  :text "")))
)

(defwidget caltime []
	(eventbox :onclick "${EWW_CMD} open cal"
			  :onrightclick "${EWW_CMD} close cal"
	(label :text time))
)

(defwidget cpustatus []
	(overlay
	(circular-progress :value "${EWW_CPU.avg}" :thickness 9 :start-at 75)
	(label :text ""))
)

(defwidget ramstatus []
	(overlay
	(circular-progress :value "${round(EWW_RAM.used_mem_perc, 0)}" :thickness 9 :start-at 75)
	(label :text ""))
)

(defwidget diskstatus []
	(overlay
	(circular-progress :value "${round(EWW_DISK["/"].used_perc, 0)}" :thickness 9 :start-at 75)
	(label :text ""))
)

(defwidget switch []
	(box
	(button :timeout 500 :onclick "pacmd set-default-sink $(pacmd list-sinks | awk '(/    index/) {print $2}')"
	(label  :text outputlogo)))
)

(defwidget workspaces []
(box
(for i in workspacejson
(button :onclick "hyprctl dispatch workspace ${i}"
	(label :text i)))))


(defwidget sinkv2 []
(eventbox :onhover "${EWW_CMD} update sinktoggle=true"
          :onhoverlost "${EWW_CMD} update sinktoggle=false"
		  :onscroll "~/.config/eww/scripts/superdupervolumecontrol.sh sink-{}"
(button :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"
(box :space-evenly false
(label :text sinklogo)
(revealer :transition "slideright"
		  :reveal sinktoggle
(label :text "%${sinkvolume*10}"))
))))

(defwidget sourcev2 []
(eventbox :onhover "${EWW_CMD} update sourcetoggle=true"
          :onhoverlost "${EWW_CMD} update sourcetoggle=false"
          :onscroll "~/.config/eww/scripts/superdupervolumecontrol.sh source-{}"
(button :onclick "pactl set-source-mute @DEFAULT_SOURCE@ toggle"
(box :space-evenly false
(label :text sourcelogo)
(revealer :transition "slideright"
          :reveal sourcetoggle
(label :text "%${sourcevolume*10}"))
))))
